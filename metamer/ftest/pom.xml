<?xml version="1.0" encoding="UTF-8"?>

<!-- JBoss, Home of Professional Open Source Copyright 2010-2016, Red Hat, Inc. and individual contributors by the @authors tag.
See the copyright.txt in the distribution for a full listing of individual contributors. This is free software; you can redistribute
it and/or modify it under the terms of the GNU Lesser General Public License as published by the Free Software Foundation; either
version 2.1 of the License, or (at your option) any later version. This software is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser
General Public License for more details. You should have received a copy of the GNU Lesser General Public License along with this
software; if not, write to the Free Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA, or see the
FSF site: http://www.fsf.org. -->

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>org.richfaces.tests</groupId>
        <artifactId>metamer-root</artifactId>
        <version>4.5.17.eap-SNAPSHOT</version>
        <relativePath>../pom.xml</relativePath>
    </parent>

    <artifactId>metamer-ftest</artifactId>
    <name>RichFaces Metamer Ftest</name>

    <properties>
        <statelessViews>false</statelessViews>
        <!-- arquillian properties -->
        <!-- default values according to http://docs.oracle.com/javase/7/docs/technotes/guides/net/ipv6_guide/index.html -->
        <jvm.args.ip>-Djava.net.preferIPv4Stack=false -Djava.net.preferIPv6Addresses=false</jvm.args.ip>
        <!-- jvm args for all containers without setting prefered IP -->
        <arquillian.container.all.jvm.args>-Xms1024m -Xmx1024m -XX:MaxPermSize=512m -DstatelessViews=${statelessViews}
        </arquillian.container.all.jvm.args>
        <arquillian.container.all.jvm.args.withIP>${arquillian.container.all.jvm.args} ${jvm.args.ip}
        </arquillian.container.all.jvm.args.withIP>
        <!-- following will be set as system properties -->
        <arquillian.container.jbossas.7-1.node0>127.0.0.1</arquillian.container.jbossas.7-1.node0>
        <arquillian.container.jbossas.7-1.jvm.args>${arquillian.container.all.jvm.args.withIP}
            -Djboss.bind.address=${arquillian.container.jbossas.7-1.node0}
            -Djboss.bind.address.management=${arquillian.container.jbossas.7-1.node0}
            -Djboss.bind.address.unsecure=${arquillian.container.jbossas.7-1.node0}
        </arquillian.container.jbossas.7-1.jvm.args>

        <templates>plain</templates>
        <testng.listeners>
            org.richfaces.tests.metamer.ftest.extension.configurator.transformer.DataProviderTestTransformer,org.richfaces.tests.metamer.ftest.MetamerConsoleStatusTestListener,org.richfaces.tests.metamer.ftest.MetamerFailureLoggingTestListener,org.jboss.test.selenium.listener.BrowserConsoleLogSaverListener,org.richfaces.tests.metamer.ftest.utils.reporters.JUnitReportReporter,org.testng.reporters.XMLReporter
        </testng.listeners>
        <testng.suite.xml>src/test/resources/testng/testng-all.xml</testng.suite.xml>
        <metamer-portlet.version>3.2.1.Final</metamer-portlet.version>
        <jboss-portal.version>7.1.3.Final</jboss-portal.version>
        <!-- enable WS on EAP -->
        <eap.ws.enabled>true</eap.ws.enabled>
        <!-- graphene wait time configuration in seconds -->
        <graphene.waitGuiInterval>2</graphene.waitGuiInterval>
        <graphene.waitAjaxInterval>4</graphene.waitAjaxInterval>
        <graphene.waitModelInterval>6</graphene.waitModelInterval>
        <graphene.waitGuardInterval>4</graphene.waitGuardInterval>
    </properties>

    <dependencies>
        <dependency>
            <groupId>org.richfaces.tests</groupId>
            <artifactId>metamer</artifactId>
            <version>${project.version}</version>
            <classifier>classes</classifier>
            <scope>test</scope>
            <exclusions>
                <exclusion>
                    <groupId>com.google.guava</groupId>
                    <artifactId>guava</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <!-- Arquillian dependencies -->
        <dependency>
            <groupId>org.jboss.arquillian.graphene</groupId>
            <artifactId>graphene-webdriver</artifactId>
            <type>pom</type>
            <scope>test</scope>
            <exclusions>
                <exclusion>
                    <groupId>com.google.guava</groupId>
                    <artifactId>guava</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.jboss.arquillian.testng</groupId>
            <artifactId>arquillian-testng-container</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.richfaces</groupId>
            <artifactId>richfaces-page-fragments</artifactId>
            <version>${version.richfaces}</version>
            <scope>test</scope>
            <exclusions>
                <exclusion>
                    <groupId>com.google.guava</groupId>
                    <artifactId>guava</artifactId>
                </exclusion>
            </exclusions>
        </dependency>

        <!-- Resolution of JAR libraries into WAR archive -->
        <dependency>
            <groupId>org.jboss.shrinkwrap.resolver</groupId>
            <artifactId>shrinkwrap-resolver-impl-maven</artifactId>
            <scope>test</scope>
            <exclusions>
                <exclusion>
                    <groupId>com.google.guava</groupId>
                    <artifactId>guava</artifactId>
                </exclusion>
            </exclusions>
        </dependency>

        <dependency>
            <groupId>org.jboss.shrinkwrap.descriptors</groupId>
            <artifactId>shrinkwrap-descriptors-impl-javaee</artifactId>
        </dependency>
        <dependency>
            <groupId>org.jboss.shrinkwrap.descriptors</groupId>
            <artifactId>shrinkwrap-descriptors-api-base</artifactId>
        </dependency>

        <!-- TestNG listeners for better console output -->
        <dependency>
            <groupId>org.richfaces.tests</groupId>
            <artifactId>testng-listeners</artifactId>
            <version>${project.version}</version>
            <scope>test</scope>
        </dependency>
        <!-- WebDriver Utils -->
        <dependency>
            <groupId>org.richfaces.tests</groupId>
            <artifactId>webdriver-utils</artifactId>
            <scope>test</scope>
            <version>${project.version}</version>
        </dependency>
        <!-- TestNG Utils -->
        <dependency>
            <groupId>org.richfaces.tests</groupId>
            <artifactId>testng-utils</artifactId>
            <scope>test</scope>
            <version>${project.version}</version>
        </dependency>
        <!-- Utilities from qa-maven-plugin-->
        <dependency>
            <groupId>org.richfaces.tests</groupId>
            <artifactId>richfaces-qa-maven-plugin</artifactId>
            <scope>test</scope>
            <version>${project.version}</version>
            <exclusions>
                <exclusion>
                    <groupId>com.google.guava</groupId>
                    <artifactId>guava</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <!-- see the https://community.jboss.org/wiki/WhatsTheCauseOfThisExceptionJavalangClassFormatErrorAbsentCode -->
        <dependency>
            <groupId>org.jboss.spec</groupId>
            <artifactId>jboss-javaee-6.0</artifactId>
            <type>pom</type>
            <scope>provided</scope>
        </dependency>

        <!-- for better dates manipulation -->
        <dependency>
            <groupId>joda-time</groupId>
            <artifactId>joda-time</artifactId>
            <scope>test</scope>
            <type>jar</type>
        </dependency>

        <dependency>
            <groupId>org.eu.ingwar.tools</groupId>
            <artifactId>arquillian-suite-extension</artifactId>
            <scope>test</scope>
            <exclusions>
                <exclusion>
                    <groupId>com.google.guava</groupId>
                    <artifactId>guava</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>javassist</groupId>
                    <artifactId>javassist</artifactId>
                </exclusion>
            </exclusions>
        </dependency>

        <dependency>
            <groupId>org.testng</groupId>
            <artifactId>testng</artifactId>
        </dependency>

        <!--Creaper-->
        <dependency>
            <groupId>org.wildfly.extras.creaper</groupId>
            <artifactId>creaper-core</artifactId>
            <version>${version.org.wildfly.extras.creaper}</version>
            <exclusions>
                <exclusion>
                    <groupId>org.jboss.logging</groupId>
                    <artifactId>jboss-logging</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>com.google.guava</groupId>
                    <artifactId>guava</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.wildfly.extras.creaper</groupId>
            <artifactId>creaper-commands</artifactId>
            <version>${version.org.wildfly.extras.creaper}</version>
            <exclusions>
                <exclusion>
                    <groupId>org.jboss.logging</groupId>
                    <artifactId>jboss-logging</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>com.google.guava</groupId>
                    <artifactId>guava</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>com.google.guava</groupId>
            <artifactId>guava</artifactId>
        </dependency>

        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
        </dependency>
        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-classic</artifactId>
        </dependency>

        <dependency>
            <groupId>org.javassist</groupId>
            <artifactId>javassist</artifactId>
            <version>3.21.0-GA</version>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <!-- saves all activated maven profiles to project property qa.activated.profiles -->
            <plugin>
                <groupId>org.richfaces.tests</groupId>
                <artifactId>richfaces-qa-maven-plugin</artifactId>
                <version>${project.version}</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>profiles</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <artifactId>maven-surefire-plugin</artifactId>
                <configuration>
                    <testFailureIgnore>true</testFailureIgnore>
                    <suiteXmlFiles>
                        <suiteXmlFiles>${testng.suite.xml}</suiteXmlFiles>
                    </suiteXmlFiles>
                    <!-- Logging configuration for Selenium , templates, ip -->
                    <argLine>-Djava.util.logging.config.file=${project.build.testOutputDirectory}/logging.properties
                        -Dtemplates='${templates}' ${jvm.args.ip}
                    </argLine>
                    <properties>
                        <property>
                            <name>listener</name>
                            <value>${testng.listeners}</value>
                        </property>
                        <property>
                            <name>usedefaultlisteners</name>
                            <value>false</value>
                        </property>
                    </properties>
                    <systemPropertyVariables>
                        <project.build.directory>${project.build.directory}</project.build.directory>

                        <logging.props.dir>${project.basedir}/src/test/resources</logging.props.dir>
                        <activated.maven.profiles>${qa.activated.profiles}</activated.maven.profiles>

                        <arquillian.container.jbossas.7-1.node0>${arquillian.container.jbossas.7-1.node0}
                        </arquillian.container.jbossas.7-1.node0>
                        <arquillian.container.jbossas.7-1.jvm.args>${arquillian.container.jbossas.7-1.jvm.args}
                        </arquillian.container.jbossas.7-1.jvm.args>
                        <arquillian.container.all.jvm.args>${arquillian.container.all.jvm.args}
                        </arquillian.container.all.jvm.args>

                        <graphene.waitGuiInterval>${graphene.waitGuiInterval}</graphene.waitGuiInterval>
                        <graphene.waitAjaxInterval>${graphene.waitAjaxInterval}</graphene.waitAjaxInterval>
                        <graphene.waitModelInterval>${graphene.waitModelInterval}</graphene.waitModelInterval>
                        <graphene.waitGuardInterval>${graphene.waitGuardInterval}</graphene.waitGuardInterval>

                        <version.eap>${version.eap}</version.eap>
                        <eap.ws.enabled>${eap.ws.enabled}</eap.ws.enabled>
                    </systemPropertyVariables>
                </configuration>
            </plugin>
            <plugin>
                <artifactId>maven-dependency-plugin</artifactId>
                <executions>
                    <execution>
                        <id>copy-installed</id>
                        <phase>validate</phase>
                        <goals>
                            <goal>copy</goal>
                        </goals>
                        <configuration>
                            <artifactItems>
                                <artifactItem>
                                    <groupId>org.richfaces.tests</groupId>
                                    <artifactId>metamer</artifactId>
                                    <version>${project.version}</version>
                                    <classifier>${metamer.classifier}</classifier>
                                    <type>war</type>
                                    <destFileName>metamer.war</destFileName>
                                </artifactItem>
                            </artifactItems>
                            <outputDirectory>${project.build.directory}</outputDirectory>
                            <overWriteIfNewer>false</overWriteIfNewer>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <configuration>
                    <source>1.8</source>
                    <target>1.8</target>
                </configuration>
            </plugin>
        </plugins>
    </build>

    <profiles>
        <!-- profile for testing Metamer within Portal env. -->
        <profile>
            <id>jbossportal-remote-7-1</id>
            <properties>
                <metamer.classifier>jee6</metamer.classifier>
            </properties>
            <dependencies>
                <dependency>
                    <groupId>org.jboss.spec</groupId>
                    <artifactId>jboss-javaee-6.0</artifactId>
                    <version>1.0.0.Final</version>
                    <type>pom</type>
                    <scope>provided</scope>
                    <exclusions>
                        <exclusion>
                            <groupId>javassist</groupId>
                            <artifactId>javassist</artifactId>
                        </exclusion>
                    </exclusions>
                </dependency>
                <dependency>
                    <groupId>org.jboss.as</groupId>
                    <artifactId>jboss-as-arquillian-container-remote</artifactId>
                    <version>${jboss-portal.version}</version>
                </dependency>
                <dependency>
                    <groupId>org.jboss.portletbridge.examples</groupId>
                    <artifactId>metamer-portlet</artifactId>
                    <version>${metamer-portlet.version}</version>
                    <type>war</type>
                </dependency>
            </dependencies>
            <build>
                <plugins>
                    <plugin>
                        <artifactId>maven-dependency-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>copy-metamer-portlet</id>
                                <phase>validate</phase>
                                <goals>
                                    <goal>copy</goal>
                                </goals>
                                <configuration>
                                    <artifactItems>
                                        <artifactItem>
                                            <groupId>org.jboss.portletbridge.examples</groupId>
                                            <artifactId>metamer-portlet</artifactId>
                                            <version>${metamer-portlet.version}</version>
                                            <type>war</type>
                                            <destFileName>metamer-portlet.war</destFileName>
                                        </artifactItem>
                                    </artifactItems>
                                    <outputDirectory>target</outputDirectory>
                                    <overWriteIfNewer>false</overWriteIfNewer>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>

                    <plugin>
                        <artifactId>maven-surefire-plugin</artifactId>
                        <configuration>
                            <systemPropertyVariables>
                                <arquillian.launch>jbossas-remote-7-1</arquillian.launch>
                                <runInPortalEnv>true</runInPortalEnv>
                            </systemPropertyVariables>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <!-- only jbossas-managed-7-1 supported by now -->
            <id>ipv6</id>
            <activation>
                <property>
                    <name>ipv6</name>
                </property>
            </activation>
            <properties>
                <jvm.args.ip>-Djava.net.preferIPv4Stack=false -Djava.net.preferIPv6Addresses=true</jvm.args.ip>
                <arquillian.container.jbossas.7-1.node0>[::1]</arquillian.container.jbossas.7-1.node0>
            </properties>
        </profile>
        <profile>
            <id>smoke-tests</id>
            <activation>
                <property>
                    <name>smoke</name>
                </property>
            </activation>
            <properties>
                <testng.suite.xml>src/test/resources/testng/testng-smoke.xml</testng.suite.xml>
            </properties>
        </profile>
        <profile>
            <id>update-attributes</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>exec-maven-plugin</artifactId>
                        <executions>
                            <execution>
                                <phase>test</phase>
                                <goals>
                                    <goal>java</goal>
                                </goals>
                                <configuration>
                                    <mainClass>
                                        org.richfaces.tests.metamer.ftest.extension.attributes.collector.ComponentsAttributesCollectorTool
                                    </mainClass>
                                    <classpathScope>test</classpathScope>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <artifactId>maven-dependency-plugin</artifactId>
                        <configuration>
                            <skip>true</skip>
                        </configuration>
                    </plugin>
                    <plugin>
                        <artifactId>maven-resources-plugin</artifactId>
                        <configuration>
                            <skip>true</skip>
                        </configuration>
                    </plugin>
                    <plugin>
                        <artifactId>maven-surefire-plugin</artifactId>
                        <configuration>
                            <skip>true</skip>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>tomcat-with-myfaces</id>
            <activation>
                <property>
                    <name>myfaces</name>
                    <value>true</value>
                </property>
            </activation>
            <properties>
                <metamer.classifier>tomcat-myfaces</metamer.classifier>
            </properties>
        </profile>
        <!--
        Tasks:
            * kill containers (GlassFish, Tomcat, AS) and Drivers (IEDriver, ChromeDriver) processes before running tests
            * download + unpack drivers (only locally to ${user.home}/selenium/driver)
            * download + unpack EAP if some EAP profile activated (locally to ${user.home}/selenium/eap)
            * download + unpack Firefox binary if Firefox version specified (only locally, to ${user.home}/selenium/browser)
            * set paths to EAP, drivers (IEDriver, ChromeDriver), browser binaries (Firefox)
            * fail the build before testing when misconfigured (e.g. when path does not exist)
            * on jenkins use specified version of Firefox (version is specified in configuration of the RichFaces QA Maven Plugin)

        The profile is activated by default. To disable it, use system property -Dbrowser.disabled
        To change the default browser, set property 'browser' to (case insensitive options):
            a) for firefox: *firefox* or *ff*
            b) for chrome: *chrome*, *cr*
            c) for ie: *ie*, *explorer*, *internetExplorer*

        e.g.: -Dbrowser=FF, -Dbrowser=cr, -Dbrowser=internetExplorer, -Dbrowser=ff30

        All properties beginning with prefix 'qa.' (e.g. 'qa.eap.home' ) are returned from the qa-maven-plugin.
        All properties changed by the plugin CAN also BE OVERRIDDEN by specifying a system property, e.g.:
            `-DjbossEAP61Home=/some/path/to/eap61Home`
            `-Dwebdriver.firefox.bin=/path/to/firefox/firefox.exe`

        -->
        <profile>
            <id>browser</id>
            <activation>
                <property>
                    <name>!browser.disabled</name>
                </property>
            </activation>
            <properties>
                <jbossEAP61Home>${qa.eap.home}</jbossEAP61Home>
                <jbossEAP62Home>${qa.eap.home}</jbossEAP62Home>
                <jbossEAP63Home>${qa.eap.home}</jbossEAP63Home>
                <jbossEAP64Home>${qa.eap.home}</jbossEAP64Home>
                <jbossEAP70Home>${qa.eap.home}</jbossEAP70Home>

                <!-- All following properties are used by the qa-maven-plugin.
                     All default values of propeties can be replaced by setting system property (e.g. -Dbrowser=cr)
                -->
                <eapVersion>${version.eap}</eapVersion>
                <jenkinsFirefoxVersionMinimal>24esr</jenkinsFirefoxVersionMinimal>
                <jenkinsFirefoxVersionOptimal>31esr</jenkinsFirefoxVersionOptimal>
                <chromeDriverVersion>2.21</chromeDriverVersion>
                <seleniumVersion>${version.selenium}</seleniumVersion>
                <browser>firefox</browser>

                <!-- following properties can disable some parts of the plugin -->
                <!--
                  download and extract needed drivers and browser and set path to them using properties
                  qa.firefox.bin, qa.chrome.driver.bin, qa.ie.driver.bin. The chosen browser used for ARQ Drone is stored in
                  qa.webdriver.browser.
                -->
                <ensure.browser>true</ensure.browser>
                <!-- download and extract EAP to project build directory -->
                <ensure.eap>true</ensure.eap>
                <!-- tasks cleanup, should kill containers' processes before running the tests -->
                <ensure.cleanup>true</ensure.cleanup>
            </properties>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.richfaces.tests</groupId>
                        <artifactId>richfaces-qa-maven-plugin</artifactId>
                        <version>${project.version}</version>
                        <executions>
                            <execution>
                                <phase>process-test-classes</phase>
                                <goals>
                                    <goal>process</goal>
                                </goals>
                                <configuration>
                                    <jenkinsFirefoxConfigurationFile>../../jenkins-firefox-config.xml
                                    </jenkinsFirefoxConfigurationFile>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <artifactId>maven-surefire-plugin</artifactId>
                        <configuration>
                            <systemProperties>
                                <!-- path to Firefox binary -->
                                <webdriver.firefox.bin>${qa.firefox.bin}</webdriver.firefox.bin>
                                <!-- path to WebDriver Chrome driver binary -->
                                <webdriver.chrome.driver>${qa.chrome.driver.bin}</webdriver.chrome.driver>
                                <!-- path to WebDriver IE driver binary -->
                                <webdriver.ie.driver>${qa.ie.driver.bin}</webdriver.ie.driver>
                                <!-- name of the browser, will be passed to Arquillian -->
                                <arq.extension.webdriver.browser>${qa.webdriver.browser}
                                </arq.extension.webdriver.browser>
                            </systemProperties>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>increasedWaitIntervals</id>
            <properties>
                <graphene.waitGuiInterval>10</graphene.waitGuiInterval>
                <graphene.waitAjaxInterval>16</graphene.waitAjaxInterval>
                <graphene.waitModelInterval>20</graphene.waitModelInterval>
                <graphene.waitGuardInterval>16</graphene.waitGuardInterval>
            </properties>
        </profile>
    </profiles>
</project>
